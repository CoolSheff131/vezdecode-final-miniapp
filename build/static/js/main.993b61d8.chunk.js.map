{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","id","fetchedUser","go","React","useState","locationFormText","setLocationFormText","JSON","stringify","top","type","value","onChange","e","target","disabled","App","scheme","setScheme","activePanel","setActivePanel","setUser","size","popout","setPopout","useEffect","bridge","send","user","subscribe","detail","data","fetchData","currentTarget","dataset","to","ReactDOM","render","document","getElementById"],"mappings":"uNAwDeA,EAtCF,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,GAAQC,GAAkB,EAAtBC,GAAsB,EAAlBD,aACtB,EAAgDE,IAAMC,SAAS,IAA/D,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,OACE,cAAC,IAAD,CAAON,GAAIA,EAAX,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,6BAAKO,KAAKC,UAAUP,KACpB,cAAC,IAAD,UACE,cAAC,IAAD,CAAUQ,IAAI,8FAAd,SACE,cAAC,IAAD,CACEC,KAAK,OACLC,MAAON,EACPO,SAAU,SAACC,GACTP,EAAoBO,EAAEC,OAAOH,QAE/BI,UAAU,gBCwBXC,EA1CH,WACV,MAA4BZ,mBAAS,gBAArC,mBAAOa,EAAP,KAAeC,EAAf,KACA,EAAsCd,mBAAS,QAA/C,mBAAOe,EAAP,KAAoBC,EAApB,KACA,EAA+BhB,mBAAS,MAAxC,mBAAOH,EAAP,KAAoBoB,EAApB,KACA,EAA4BjB,mBAAS,cAAC,IAAD,CAAekB,KAAK,WAAzD,mBAAOC,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WAAM,sDAOd,8GACqBC,IAAOC,KAAK,uBADjC,OACQC,EADR,OAEEP,EAAQO,GACRJ,EAAU,MAHZ,4CAPc,sBACdE,IAAOG,WAAU,YAAiC,IAAD,IAA7BC,OAAUpB,EAAmB,EAAnBA,KAAMqB,EAAa,EAAbA,KACrB,yBAATrB,GACFQ,EAAUa,EAAKd,WAHL,mCAYde,KACC,IAMH,OACE,cAAC,IAAD,CAAgBf,OAAQA,EAAxB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAaM,OAAQA,EAArB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMJ,YAAaA,EAAnB,SACE,cAAC,EAAD,CAAMnB,GAAG,OAAOC,YAAaA,EAAaC,GAX7C,SAACW,GACVO,EAAeP,EAAEoB,cAAcC,QAAQC,oBC/B3CT,IAAOC,KAAK,gBAEZS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.993b61d8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport bridge from '@vkontakte/vk-bridge';\nimport {\n  Panel,\n  PanelHeader,\n  Header,\n  Button,\n  Group,\n  Cell,\n  Div,\n  Input,\n  FormItem,\n  Switch,\n  Avatar,\n  SimpleCell,\n} from '@vkontakte/vkui';\n\nconst Home = ({ id, go, fetchedUser }) => {\n  const [locationFormText, setLocationFormText] = React.useState('');\n  return (\n    <Panel id={id}>\n      <Group>\n        <Div>\n          <h1>{JSON.stringify(fetchedUser)}</h1>\n          <Div>\n            <FormItem top=\"Название локации\">\n              <Input\n                type=\"text\"\n                value={locationFormText}\n                onChange={(e) => {\n                  setLocationFormText(e.target.value);\n                }}\n                disabled={false}\n              />\n            </FormItem>\n          </Div>\n        </Div>\n      </Group>\n    </Panel>\n  );\n};\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport {\n  View,\n  ScreenSpinner,\n  AdaptivityProvider,\n  AppRoot,\n  ConfigProvider,\n  SplitLayout,\n  SplitCol,\n} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n  const [scheme, setScheme] = useState('bright_light');\n  const [activePanel, setActivePanel] = useState('home');\n  const [fetchedUser, setUser] = useState(null);\n  const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n\n  useEffect(() => {\n    bridge.subscribe(({ detail: { type, data } }) => {\n      if (type === 'VKWebAppUpdateConfig') {\n        setScheme(data.scheme);\n      }\n    });\n\n    async function fetchData() {\n      const user = await bridge.send('VKWebAppGetUserInfo');\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n  }, []);\n\n  const go = (e) => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return (\n    <ConfigProvider scheme={scheme}>\n      <AdaptivityProvider>\n        <AppRoot>\n          <SplitLayout popout={popout}>\n            <SplitCol>\n              <View activePanel={activePanel}>\n                <Home id=\"home\" fetchedUser={fetchedUser} go={go} />\n              </View>\n            </SplitCol>\n          </SplitLayout>\n        </AppRoot>\n      </AdaptivityProvider>\n    </ConfigProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}